!function(){"use strict";class e{constructor(e,t,s){let{name:r,link:o}=e;this._name=r,this._link=o,this._cardSelector=t,this._handleImageClick=s}_toggleLike=()=>{this._likeButton.classList.toggle("card__icon-button_active")};_setEventListeners(){this._likeButton.addEventListener("click",this._toggleLike),this._deleteButton.addEventListener("click",this._deleteCard),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_deleteCard=e=>{this._cardElement.remove(),this._cardElement=null};getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._cardElement.querySelector(".card__icon"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._invalidInputClass=t.invalidInputClass,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inactiveButtonClass=t.inactiveButtonClass,this._formElement=e,this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)]}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(e){this._toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_checkFormValidity(){return this._inputElements.some((e=>!e.validity.valid))}_showInputError(e,t){this._errorMessageEl=this._formElement.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageEl.textContent=t,this._errorMessageEl.classList.add(this._errorClass),e.classList.add(this._invalidInputClass)}_hideInputError(e){this._errorMessageEl=this._formElement.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageEl.textContent="",this._errorMessageEl.classList.remove(this._errorClass),e.classList.remove(this._invalidInputClass)}}class s{constructor(e){this._popupElement=document.querySelector(e),this._closeButtonPopup=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target!==this._closeButtonPopup&&e.target!==this._popupElement||this.close()}))}}class r extends s{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._profileDescription=document.querySelector(".profile__subheading"),this._profileName=document.querySelector(".profile__title"),this._modalInputName=document.querySelector("#profileModal__input-name"),this._modalInputDescription=document.querySelector("#profileModal__input-description"),this._inputList=[...this._popupForm.querySelectorAll(".modal__input")],this._closeButtonPopup=this._popupElement.querySelector(".modal__close"),this._popupButton=this._popupElement.querySelector(".modal__button")}close(){this._popupForm.reset(),super.close()}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{this._handleFormSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}}const o=document.querySelector("card-wrapper"),i=document.querySelector(".profile__add-button"),n=document.querySelector(".profile__arrow"),a=document.forms.profileModalForm,l=document.forms.cardModalForm,c={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:".modal__input-error",errorClass:".modal__input-error_active",invalidInputClass:"modal__input-invalid"};i.addEventListener("click",(()=>{h.open()})),n.addEventListener("click",(()=>{m.open();const e=g.getUserInfo();m.setInputValues(e)}));const u=(e,t)=>{p.open(e,t)},_=t=>new e(t,"#card-template",u).getView(),d={items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=_(e);E.addItem(t)}},m=new r("#profileModal",(e=>{g.setUserInfo(e)})),h=new r("#cardModal",(e=>{const t=_(e);E.addItem(t)})),p=new class extends s{constructor(e){super(e),this._cardModalImage=document.querySelector(".cardImage__modal-image"),this._imageModaltext=document.querySelector(".card__imageModal-text"),this._cardImage=document.querySelector(".card__image")}open(e,t){this._cardModalImage.src=t,this._imageModaltext.textContent=e,this._cardModalImage.alt=e,super.open()}}("#imageModal"),E=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._wrapper=t}renderItems=()=>{this._items.forEach((e=>{this._renderer(e)}))};addItem=e=>{this._wrapper.prepend(e)}}(d,o),g=new class{constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this._userName=document.querySelector(t),this._userJob=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,job:this._userJob.textContent}}setUserInfo(e){let{name:t,job:s}=e;this._userName.textContent=t,this._userJob.textContent=s}}({userNameSelector:".profile__title",userJobSelector:".profile__subheading"}),v=new t(a,c),S=new t(l,c);E.renderItems(),h.setEventListeners(),m.setEventListeners(),p.setEventListeners(),v.enableValidation(),S.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,